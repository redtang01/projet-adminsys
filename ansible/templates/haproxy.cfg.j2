global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    maxconn 1000
    tune.ssl.default-dh-param 2048

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client 10000
    timeout server 10000

frontend frontend1
    bind *:80
    default_backend backends1

frontend frontend2
    bind *:81
    default_backend backends2

frontend frontend3
    bind *:83
    default_backend backends3

listen stats
    bind *:8080
    stats enable
    stats uri /stats
    stats realm Haproxy\ Statistics

backend backends1
    mode http
    balance roundrobin
    {% for backend in groups['backend_1'] -%}

      server backend1_{{ loop.index }} {{backend}}:80 check {% if 'sbg' in hostvars[backend]['ansible_facts']['hostname'] %}backup {% endif %}

    {% endfor -%}

backend backends2
    mode http
    balance roundrobin
    {% for backend in groups['backend_2'] -%}

      server backend2_{{ loop.index }} {{ hostvars[backend]['ansible_facts']['ens4']['ipv4']['address'] }}:8080 check {% if 'sbg' in hostvars[backend]['ansible_facts']['hostname'] %}backup {% endif %}

    {% endfor -%}

backend backends3
    mode http
    balance roundrobin
    {% for backend in groups['backend_3'] -%}

      server backend3_{{ loop.index }} {{ hostvars[backend]['ansible_facts']['ens4']['ipv4']['address'] }}:80 check {% if 'sbg' in hostvars[backend]['ansible_facts']['hostname'] %}backup {% endif %}


    {% endfor -%}
